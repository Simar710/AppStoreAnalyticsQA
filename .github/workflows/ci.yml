name: iOS CI/CD Pipeline

on:
  push:
    branches:
      - development
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: macos-15  # Use macOS-15 to get Xcode 16.2

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full repo history

      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer

      - name: Clean Derived Data
        run: rm -rf ~/Library/Developer/Xcode/DerivedData/*

      - name: Check Xcode Version
        run: xcodebuild -version

      - name: Build and Run Unit Tests
        run: |
          xcodebuild clean test \
          -project AppStoreAnalyticsQA.xcodeproj \
          -scheme AppStoreAnalyticsQA \
          -destination 'platform=iOS Simulator,name=iPhone 16 Pro,OS=18.2' \
          CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/

  ui-tests:
    runs-on: macos-15  # Ensure UI tests also run on macOS-15 with Xcode 16.2
    needs: build-and-test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Clean Derived Data
        run: rm -rf ~/Library/Developer/Xcode/DerivedData/*

      - name: Reset Simulators
        run: |
          xcrun simctl shutdown all
          xcrun simctl erase all

      - name: Wait for Simulator to Boot
        run: sleep 20

      - name: List Available Simulators
        run: xcrun simctl list devices

      - name: Run UI Tests
        run: |
          xcodebuild clean test \
          -project AppStoreAnalyticsQA.xcodeproj \
          -scheme AppStoreAnalyticsQAUITests \
          -destination 'platform=iOS Simulator,name=iPhone 16 Pro,OS=18.2' \
          CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

      - name: Upload UI Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-results
          path: ~/Library/Developer/Xcode/DerivedData/**/Logs/Test/

  api-tests:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests  # Install the 'requests' module

      - name: Run API Tests
        run: python Scripts/api_test.py

